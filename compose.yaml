version: '3.8'

networks:
  traefik-public:
    driver: bridge

services:
  traefik:
    image: traefik:v3.1
    command: 
      - "--api.insecure=true"
      - "--providers.docker"
      - "--entrypoints.web.address=:80"
      - "--metrics.prometheus=true"
      - "--entrypoints.metrics.address=:8081" 
      - "--metrics.prometheus.entryPoint=metrics"
    ports:
      - "80:80"
      - "8080:8080"
      - "8081:8081" 
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - traefik-public
      - default


  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - traefik-public
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    networks:
      - traefik-public
    labels:
      - "traefik.http.routers.grafana.rule=Host(`${GRAFANA_URL}`)"
      - "traefik.http.routers.grafana.service=grafana"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus

  serviceError:
    image: nginx
    volumes:
      - ./error.html:/usr/share/nginx/html/429.html
    networks:
      - traefik-public
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.serviceError.rule=Host(`error.localhost`)"
      - "traefik.http.services.serviceError.loadbalancer.server.port=80"



#This is a 

  service-image:
    image: nginx:alpine  # Replace with your image
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${ROUTER_NAME}.rule=Host(`${ROUTER_URL}`)"
      - "traefik.http.services.${ROUTER_NAME}.loadbalancer.server.port=5000"

      # Rate Limit Middleware
      - "traefik.http.routers.${ROUTER_NAME}.middlewares= test-errors@docker, rate-limit@docker" # Order matters
      - "traefik.http.middlewares.rate-limit.rateLimit.average=${AVERAGE_LIMIT}"  # Average requests per second
      - "traefik.http.middlewares.rate-limit.rateLimit.burst=${BURST_LIMIT}"    # Burst capacity

      #Return specific response
      - "traefik.http.middlewares.test-errors.errors.status=429"
      - "traefik.http.middlewares.test-errors.errors.service=serviceError"
      - "traefik.http.middlewares.test-errors.errors.query=/429.html"