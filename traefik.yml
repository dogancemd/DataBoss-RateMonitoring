http:
  routers:
    service-image:
      rule: "Host(`service.localhost`)" # Replace with your domain
      entryPoints:
        - web
        - websecure
      service: service-image
      middlewares:
        - error-pages
        - rate-limit
    
    grafana:
      rule: "Host(`grafana.localhost`)"
      entryPoints:
        - web
        - websecure
      service: grafana

  middlewares:
    rate-limit:
      rateLimit:
        average: 1
        burst: 1

    error-pages:
      errors:
        status:
          - "429"
        service: serviceError
        query: /429.html

  services:
    api:
      loadBalancer:
        servers:
          - url: "http://traefik:8080"  

    service-image:
      loadBalancer:
        servers: # List of services to load-balance
          - url: "http://service-image:80"
          - url: "http://service-image-2:80"
    
    serviceError:
      loadBalancer:
        servers:
          - url: "http://serviceError:80"

    grafana:
      loadBalancer:
        servers:
          - url: "http://grafana:3000"



providers:
  docker:
    exposedByDefault: false
  file:
    filename: /etc/traefik/traefik.yml

api:
  insecure: true

entryPoints:
  metrics:
    address: ":8081"
  web:
    address: ":80"
    http:
        redirections:
          entryPoint:
            to: websecure
            scheme: https
  websecure:
    address: ":443"
    http:
      tls:
        certResolver: certresolver

metrics:
  prometheus:
    entryPoint: metrics

networks:
  traefik-public:

accessLog:
  filePath: "/var/log/traefik/access.log"
  bufferingSize: 100
  fields:
    defaultMode: drop
    names:
      ServiceName: keep
      ServiceURL: keep
      RequestScheme: keep
      RouterName: keep
    




    

ping: {}

certificatesResolvers:
  certresolver:  # Define the certificate resolver
    acme:
      email: example@mail.com  # Replace with your email
      storage: acme.json  # File to store certificates
      httpChallenge:
        entryPoint: web  # The entry point used for the challenge